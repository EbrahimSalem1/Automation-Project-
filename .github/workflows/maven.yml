name: Maven CI

# Triggers the workflow on push or pull request events
on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    # The job runs on the latest Ubuntu runner
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Step 2: Set up Java (use the version needed for your project)
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin' # Or 'zulu', 'adopt', etc.
          java-version: '17' # Change this to the required Java version

      # Step 3: Cache Maven dependencies to speed up the build process
      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      # Step 4: Build the project with Maven
      - name: Build with Maven
        run: mvn -B clean install

      # Step 5: Run tests
      - name: Run tests
        run: mvn test

      # Step 6: Archive test results (JUnit reports)
      - name: Archive test results
        if: always() # Run this step even if tests fail
        uses: actions/upload-artifact@v3
        with:
          name: test-results
          path: C:\Users\Compu City\IdeaProjects\Automation-FrameWork\pom.xml # Adjust the path as needed for your Maven project

      # Step 7: Package the application (optional, if you want to build a JAR or WAR)
      - name: Package application
        run: mvn package





















# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# name: Java CI with Maven

# on:
#   push:
#     branches: [ "master" ]
#   pull_request:
#     branches: [ "master" ]

# jobs:
#   build:

#     runs-on: ubuntu-latest

#     steps:
#     - uses: actions/checkout@v4
#     - name: Set up JDK 17
#       uses: actions/setup-java@v4
#       with:
#         java-version: '17'
#         distribution: 'temurin'
#         cache: maven
#     - name: Build with Maven
#       run: mvn -B package --file pom.xml

#     # Optional: Uploads the full dependency graph to GitHub to improve the quality of Dependabot alerts this repository can receive
#     - name: Update dependency graph
#       uses: advanced-security/maven-dependency-submission-action@571e99aab1055c2e71a1e2309b9691de18d6b7d6


